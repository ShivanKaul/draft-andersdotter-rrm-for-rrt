



Internet Research Task Force                             A. Andersdotter
Internet-Draft                                                ARTICLE 19
Intended status: Informational                                  S. Sahib
Expires: May 1, 2020                                          Salesforce
                                                        October 29, 2019


     Randomized Response Mechanisms in RRT Measurements for HTTP/3
               draft-andersdotter-rrm-for-rrt-in-http3-00

Abstract

   The Latency Spin Bit is an optional feature included in I-D-QUIC,
   sec. 17.3.1 [I-D-QUIC].  It enables passive latency monitoring from
   observation points on the network path throughout the duration of a
   connection.  This draft presents the results of an inquiry into the
   potential of using randomized response mechanism (RRM) to enhance
   privacy gain in latency measurements.  It concludes that RRM could be
   used to introduce choice for web browser clients in preserving
   privacy in latency measurements, but only at the cost of losing the
   utility of the latency measurements.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on May 1, 2020.

Copyright Notice

   Copyright (c) 2019 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents



Andersdotter & Sahib       Expires May 1, 2020                  [Page 1]

Internet-Draft            rrm-for-rrt-in-http3              October 2019


   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Randomized Response Mechanisms  . . . . . . . . . . . . . . .   2
   3.  Application to Spin Bit . . . . . . . . . . . . . . . . . . .   3
     3.1.  Case 1: RRM at reflection/inversion . . . . . . . . . . .   5
       3.1.1.  Analysis: No reset and no edge identifying bit  . . .   6
       3.1.2.  Analysis: Reset and no edge identifying bit . . . . .   8
     3.2.  RRM at each bit . . . . . . . . . . . . . . . . . . . . .   9
       3.2.1.  Example . . . . . . . . . . . . . . . . . . . . . . .   9
   4.  Conclusion  . . . . . . . . . . . . . . . . . . . . . . . . .  10
   5.  Informative References  . . . . . . . . . . . . . . . . . . .  10
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  11

1.  Introduction

   At the IETF104 convening of the Privacy Enhancements and (PEA)
   Research Group, a presentation on Differential Privacy ([AA-CL]) gave
   rise to the idea of trying to apply Randomized Response methods to
   the QUIC Spin Bit described in [TRAMMEL] and [KUEHLEWIND].  The QUIC
   Spin Bit had generated controversy from a privacy perspective, both
   in the Working Group meetings and on e-mailing lists and been re-
   ignited through the publication of a subsequent Human Rights
   Consideration in [TENOEVER-MARTINI].

   Randomized response trials were originally created for binary
   environments: if a series of measurements has only two possible
   outcomes (0 or 1, yes or no, true or false, for instance), it is the
   idea that allowing individual respondents to answer "falsely" at a
   predictable rate will still preserve the ability to make inferences
   on the entire set of respondents.  The Spin Bit, being a bit, is
   binary outcome variable.  Each time it is measured, the idea is that
   it can either "truthfully" report its value as what it should be
   according to [TRAMMEL], or it could, at some known rate or
   probability, report the opposite value.

2.  Randomized Response Mechanisms

   Randomized Response Mechanisms (RRM) rely on the ability to make
   sense of data with known errors and were originally developed to
   facilitate surveys on sensitive topics such as alcohol or drug abuse,
   or political affiliation.  The design allows a survey taker to



Andersdotter & Sahib       Expires May 1, 2020                  [Page 2]

Internet-Draft            rrm-for-rrt-in-http3              October 2019


   provide, with some known probability P, a "false" answer ("yes"
   instead of "no", for example) to a survey question.  It is meant to
   encourage truthful answers even in surveys where participants may
   otherwise feel compelled to give false answers.

   RRMs are most easily illustrated for binary response problems.  Let's
   take as an example "Did you go to the last IETF meeting?"  The answer
   to this question is either yes or no.  If 30% of all responses are
   known to be false, we have four categories of responses: true yes,
   true no, false yes and false no.  From these numbers we can estimate
   the proportion of recurring visitors to the IETF.

   RRMs can also be applied to multiple choice questions.  Estimation of
   true proportions becomes more difficult as the number of possible
   answers per question goes up.  Further examples, including formulas
   and calculations, can be found in [DWORK] and [FOX].

3.  Application to Spin Bit

   As described in [TRAMMEL], the Spin Bit is a mechanism for measuring
   round-trip-times (RTT) in the QUIC protocol.  Its operation is
   captured by the following five images, extracted from this draft:

   Initially, during connection establishment, no packets with a spin
   bit are in flight, as shown in Figure 1.

   +--------+   -  -  -  -  -   +--------+
   |        |     -------->     |        |
   | Client |                   | Server |
   |        |     <--------     |        |
   +--------+   -  -  -  -  -   +--------+

      Figure 1: Initial state, no spin bit between client and server

   Either the server, the client, or both can begin sending packets with
   short headers after connection establishment, as shown in Figure 2;
   here, no spin edges are yet in transit.

   +--------+   0  0  -  -  -   +--------+
   |        |     -------->     |        |
   | Client |                   | Server |
   |        |     <--------     |        |
   +--------+   -  -  0  0  0   +--------+

       Figure 2: Client and server begin sending packets with spin 0

   Once the server's first 0-marked packet arrives at the client, the
   client sets its spin value to 1, and begins sending packets with the



Andersdotter & Sahib       Expires May 1, 2020                  [Page 3]

Internet-Draft            rrm-for-rrt-in-http3              October 2019


   spin bit set, as shown in Figure 3.  The spin edge is now in transit
   toward the server.

   +--------+   1  0  0  0  0   +--------+
   |        |     -------->     |        |
   | Client |                   | Server |
   |        |     <--------     |        |
   +--------+   0  0  0  0  0   +--------+

                     Figure 3: The bit begins spinning

   Five ticks later, this packet arrives at the server, which takes its
   spin value from it and reflects that value back on the next packet it
   sends, as shown in Figure 4.  The spin edge is now in transit toward
   the client.

   +--------+   1  1  1  1  1   +--------+
   |        |     -------->     |        |
   | Client |                   | Server |
   |        |     <--------     |        |
   +--------+   0  0  0  0  1   +--------+

                  Figure 4: Server reflects the spin edge

   Five ticks later, the 1-marked packet arrives at the client, which
   inverts its spin value and sends the inverted value on the next
   packet it sends, as shown in Figure 5.

         obs. points  X  Y
   +--------+   0  1  1  1  1   +--------+
   |        |     -------->     |        |
   | Client |                   | Server |
   |        |     <--------     |        |
   +--------+   1  1  1  1  1   +--------+
                         Y

                  Figure 5: Client inverts the spin edge

   In each iteration of Figure 4-Figure 5 the a sequence of 0s or 1s the
   length of which is k0 for iteration 0, k1 for iteration 1, and so
   forth, can be measured (by X or Y in the picture).  The length of
   each sequence equals the amount of ticks required to pass from the
   client back to the client.  After n iterations, an average can be
   taken of the measurements (k0, ..., kn).  This average can be
   multiplied by the amount of time per tick (a quantity which is
   assumed to be known) to get a value for the round-trip time (RTT).





Andersdotter & Sahib       Expires May 1, 2020                  [Page 4]

Internet-Draft            rrm-for-rrt-in-http3              October 2019


   Applying randomized response mechanisms (RRMs) perturbs the
   measurements (k0, ..., kn).  The perturbation will have the effect of
   lengthening, shortening, or making more arbitrary the size of the
   measurement, thereby increasing the variance, or disable the
   possibility, of an estimator of the true RTT value.

   The server or the client is assumed to always behave as described in
   Figure 4-Figure 5 with no RRM.  That means the assumed default
   behaviour is that a "truly" reflecting server that receives a bit set
   to v=0 always reflects a bit with v=0, while a server which "falsely"
   reflects a bit receives a bit set to v=0 and reflects a bit set to
   v=1.  Different probabilities could be applied to the server and
   client, respectively, transmitting a "wrong" value or delaying a
   reflection.

   An additional assumption is that the server and client behave
   independently of one another.  This means that the server has no
   information on whether the client has omitted an inversion, and the
   client has no information on whether the server has omitted a
   reflection.  Omissions are therefore independent events.

   We have looked at three ways of perturbing measurements:

      1.  RRMs are applied so that the reflections in Figure 4 or
      inversions in Figure 5 do not occur with probability P or Q
      respectively.

      2.  RRMs are applied so that that each bit transmitted from the
      client, whether or not an inversion is occurring, has a
      probability P of being the "wrong" value.

      3.  RRMs are applied so that that each bit transmitted from the
      server, whether or not a reflection is occurring, has a
      probability Q of being the "wrong" value.

3.1.  Case 1: RRM at reflection/inversion

   The omission of a reflection or inversion creates difficulties.
   Namely, let's say the client omits the inversion in Figure 5.  Now
   there is no longer a spin edge so there is nothing to activate future
   reflections/inversions.

   A possible work-around is to do random re-sets of the spin bit, i.e.,
   starting the process fresh from Figure 2.  Observers X and Y in
   Figure 5 would then get a series of measurements (k0, ..., kn), some
   of which were far too large, but would, over time, be able to deduce
   RTT from the smaller measurements.  The expected proportion of large
   and small measurements in the whole set of measurements could be



Andersdotter & Sahib       Expires May 1, 2020                  [Page 5]

Internet-Draft            rrm-for-rrt-in-http3              October 2019


   determined from the probabilities that a reflection/inversion does
   not happen and the probability that the spin bit is re-initiated.

   Another possible work-around is having an additional bit to indicate
   a spin edge, assigned by the server to the bit which is (not)
   reflected in Figure 4, or by the client to the bit which is (not)
   inverted in Figure 5.  In this case there would not be a point in
   applying RRM since the placement of the spin edge would no longer be
   obfuscated.

   If the ordinary spin edge is obfuscated by through omission of
   reflection/inversion, and the edge-identifying bit is also, with some
   probability, not correctly identifying an edge, the utility of having
   two latency bits again goes up at no additional loss of privacy.

3.1.1.  Analysis: No reset and no edge identifying bit

   The bit starts spinning with value v=1 in Figure 3.  At the point of
   reflection (see Figure 4), it does not reflect with probability P.
   At the point of inversion (see Figure 5), it does not invert with
   probability Q.  We consider P and Q respectively to be the
   probability that the server or client does not behave in the way
   specified.

   That gives four possible outcomes for the bit immediately following
   one complete round-trip:

      1.  With probability P(1-Q) the first bit in the second round-trip
      transmitted by the client will be v=1.  Since v=1 is the same bit
      value that the client used to initiate the spin, there will no
      longer be a clear spin edge.

      2.  With probability (1-P)Q the first bit in the second round-trip
      transmitted by the client will, again, be v=1.

      3.  With probability (1-P)(1-Q) the first bit in the second round-
      trip transmitted by the client will be v=0.  This such a
      measurement as is foreseen by the specification.

      4.  With probability PQ the the first and a half rotation of the
      spin bit will produce such a measurement as is foreseen by the
      specification.  The result would as if a bit started spinning with
      v=0 at the server in Figure 5 and continued without inversion
      (i.e. remaining at v=0) into the future.

   In two of these outcomes, the spin edge is eradicated.  The
   probability of elimination is minimized by setting P=Q=1/2, but even




Andersdotter & Sahib       Expires May 1, 2020                  [Page 6]

Internet-Draft            rrm-for-rrt-in-http3              October 2019


   this would imply that half of the time the spin bit is no longer able
   to serve its purpose.

   We can represent this as a Markov transition matrix, where Q' and P'
   will be used as short-hand for (1-Q) and (1-P).  Define the following
   events:

      A.  The first bit in the k:th round-trip initiated by the client
      is v=1.  It receives a correctly reflected bit from the server.
      The first bit in the (k+1):th round-trip as transmitted by the
      client is v=1, meaning that the client has omitted an inversion.

      B.  The first bit in the k:th round-trip initiated by the client
      is v=0.  It receives a correctly reflected bit from the server.
      The first bit in the (k+1):th round-trip as transmitted by the
      client is v=1, meaning that the client has correctly inverted.

      C.  The first bit in the k:th round-trip initiated by the client
      is v=0.  It receives a correctly reflected bit from the server.
      The first bit in the (k+1):th round-trip as transmitted by the
      client is v=0, meaning that the client has omitted an inversion.

      D.  The first bit in the k:th round-trip initiated by the client
      is v=1.  It receives a correctly reflected bit from the server.
      The first bit in the (k+1):th round-trip as transmitted by the
      client is v=0, meaning that the client has correctly inverted.

      E.  The first bit in the k:th round-trip initiated by the client
      is v=1.  It does not receive a reflected bit from the server.  The
      first bit in the (k+1):th round-trip as transmitted by the client
      is v=1, meaning that the client has correctly inverted.

      F.  The first bit in the k:th round-trip initiated by the client
      is v=1.  It does not receive a reflected bit from the server.  The
      first bit in the (k+1):th round-trip as transmitted by the client
      is v=0, meaning that the client has omitted an inversion.

      G.  The first bit in the k:th round-trip initiated by the client
      is v=0.  It does not receive a reflected bit from the server.  The
      first bit in the (k+1):th round-trip as transmitted by the client
      is v=1, meaning that the client has omitted an inversion.

      H.  The first bit in the k:th round-trip initiated by the client
      is v=0.  It does not receive a reflected bit from the server.  The
      first bit in the (k+1):th round-trip as transmitted by the client
      is v=0, meaning that the client has correctly inverted.





Andersdotter & Sahib       Expires May 1, 2020                  [Page 7]

Internet-Draft            rrm-for-rrt-in-http3              October 2019


      I.  The server receives does not receive a triggering event,
      meaning that two bits immediately following one another are always
      the same.  The server does nothing.

      J.  The client receives does not receive a triggering event,
      meaning that two bits immediately following one another are always
      the same.  The client does nothing.


   +---+----+----+----+----+----+----+----+----+----+----+
   |   | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  |
   +---+----+----+----+----+----+----+----+----+----+----+
   | A | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 0  |Q'P | 0  |
   +---+----+----+----+----+----+----+----+----+----+----+
   | B |P'Q'| 0  | 0  |P'Q'|P'Q'|P'Q'| 0  | 0  | 0  | 0  |
   +---+----+----+----+----+----+----+----+----+----+----+
   | C | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 0  |Q'P | 0  |
   +---+----+----+----+----+----+----+----+----+----+----+
   | D | 0  |P'Q'|P'Q'| 0  | 0  | 0  |P'Q'|P'Q'| 0  | 0  |
   +---+----+----+----+----+----+----+----+----+----+----+
   | E | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 0  |QP' | 0  |
   +---+----+----+----+----+----+----+----+----+----+----+
   | F | 0  | PQ | PQ | 0  | 0  | 0  | PQ | PQ | 0  | 0  |
   +---+----+----+----+----+----+----+----+----+----+----+
   | G | PQ | 0  | 0  | PQ | PQ | PQ | 0  | 0  | 0  | 0  |
   +---+----+----+----+----+----+----+----+----+----+----+
   | H | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 0  | QP'| 0  |
   +---+----+----+----+----+----+----+----+----+----+----+
   | I | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 1  |
   +---+----+----+----+----+----+----+----+----+----+----+
   | J | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 0  | 1  | 0  |
   +---+----+----+----+----+----+----+----+----+----+----+


       Figure 6: RRM transition matrix, no reset and no edge-id bit

   test

3.1.2.  Analysis: Reset and no edge identifying bit

   The possible outcomes are as in Section 3.1.1, and the problem to be
   resolved is that the spin edge disappears with probability 1/2.

   Introducing the probability R of a random re-set of the spin bit at
   every m:th bit transmission can "re-initiate" the edge by taking the
   entire system back into the situation described in Figure 4.  If we
   let A be the number of ticks between client and server, and B the
   number of ticks between server and client, the total amount of ticks



Andersdotter & Sahib       Expires May 1, 2020                  [Page 8]

Internet-Draft            rrm-for-rrt-in-http3              October 2019


   in a round trip time is A+B=C.  If R>1/2 and m >> C, a loop of bits
   set to v=1 after the second round-trip is perhaps broken after km
   steps, where k is an integer whose distribution is geometric (1-R).
   An observation point will pick up sequences of v=0 that can be used
   as a basis for measurement at time intervals km.

   In the case of a one-way observations, such as X in Figure 5, there
   may be full-length sequences of v=0 whose average will be as
   described above.  In the case of a two-way observation, such as Y in
   Figure 5 , after each reset there will be a probability P(1-Q) that a
   half-sequence of v=1 will be detected at the bottom Y, and
   probability 1/2 that a full sequence will be detected at the top Y.

3.2.  RRM at each bit

   Let us say any bit transmitted from either the client or the server
   is "off" in relation to what it proposed in the Spin Bit model with
   some probability P.  If P -> 0.5, the spinning bits will come across
   as a random 0s and 1s and it will be difficult to estimate any edge.
   However, if P is less than 0.5, the spin edge can be estimated for
   instance by computing an average number of 0s or 1s in the past m
   ticks.  For all averages above some cut-off rate, a measurement
   counter could be incremented by one.  Eventually one would end up
   with a series (k'0, ..., k'n) that roughly corresponds to (k0, ...,
   kn) above.

3.2.1.  Example

   The bit spins in the foreseen way.  Every time a bit is transmitted,
   there is a probability P that it holds a different value than it
   should.  In Figure 5 , either measurements station X or both stations
   Y observe a passing bit, as well as bits passing before or after that
   bit (if any).  After observing 2k+1 bits (b[-k], ..., b[0], ...,
   b[k]) the true value of bit b[0] is estimated, for instance based on
   whether the majority of b[i] were v=0 or v=1.  The estimated value is
   then used to increment a sequence counter.

   The estimator follows a binomial distribution (drawing with
   replacement), and the risk of misidentifying a bit is equal to the
   risk of having (k+1) v=1 bits in the 2k observations where b[0]
   "should" be attributed to v=0.  This risk depends on P and k.

   Setting k too large creates a risk of having estimator sequences that
   are longer than the round-trip time (RTT) to be measured.  If P is
   reasonably small, estimation will still eventually be possible after
   a sufficient amount of measurements.  One option is to keep P
   variable and determined by the client, introducing the possibility of
   choice in RTT measurements.



Andersdotter & Sahib       Expires May 1, 2020                  [Page 9]

Internet-Draft            rrm-for-rrt-in-http3              October 2019


4.  Conclusion

   The spin bit is associated with an IP address which creates
   linkability (see [RFC6973] and [RFC8280]).  The privacy concern
   associated with a spin bit is, additionally, that latency
   measurements will enable inferrence of the location or distance of
   the device associated with that particular IP address.

   Randomized response mechanisms (RRM) would either cause the utility
   of the spin bit to disappear entirely (by rendering any measurement
   futile) or cause the primary privacy-reducing inferrence to remain a
   problem, as long as a sufficiently large amount sequential
   measurements were done.  Each measurement would continue to be tied
   to fixed identifier, which necessarily implies privacy loss.

   For this reason, it is not clear that RRM would ultimately bring any
   particular privacy benefit beyond what is already guaranteed in the
   present proposal.  A possible option is to allow a client to set a
   randomization value P in such a way that it could be close to 1/2, in
   the case where each bit is always RRM-protected.  Then the client
   would have the option of avoiding latency measurements entirely.

5.  Informative References

   [AA-CL]    Andersdotter, A. and C. Laengstroem, "Differential Privacy
              (PEARG, IETF104)", March 2019,
              <https://datatracker.ietf.org/meeting/104/materials/
              slides-104-pearg-amelia-christoffer-differential-privacy-
              00>.

   [DWORK]    Roth, A. and C. Dwork, "The Algorithmic Foundations of
              Differential Privacy", 2014,
              <https://www.cis.upenn.edu/~aaroth/Papers/
              privacybook.pdf>.

   [FOX]      Fox, J., "Randomized Response and Related Methods:
              Surveying Sensitive Data", February 2017.

   [I-D-QUIC]
              Iyengar, J. and M. Thomson, "QUIC: A UDP-Based Multiplexed
              and Secure Transport", September 2019,
              <https://tools.ietf.org/html/
              draft-ietf-quic-transport-23>.

   [KUEHLEWIND]
              Kuehlewind, M. and B. Trammel, "The QUIC Latency Spin Bit
              (draft-ietf-quic-spin-exp-01)", October 2018,
              <https://tools.ietf.org/html/draft-ietf-quic-spin-exp-01>.



Andersdotter & Sahib       Expires May 1, 2020                 [Page 10]

Internet-Draft            rrm-for-rrt-in-http3              October 2019


   [RFC6973]  Cooper, A., Tschofenig, H., Aboba, B., Petersen, J.,
              Morris, J., Hansen, M., and R. Smith, "Privacy
              Considerations for Internet Protocols", RFC 6973,
              DOI 10.17487/RFC6973, July 2013,
              <https://www.rfc-editor.org/info/rfc6973>.

   [RFC8280]  Ten Oever, N. and C. Cath, "Human Rights Considerations
              for Internet Protocols", RFC 8280, DOI 10.17487/RFC8280,
              October 2017, <https://www.rfc-editor.org/info/rfc8280>.

   [TENOEVER-MARTINI]
              Martini, B. and N. Ten Oever, "QUIC Human Rights Review
              (draft-martini-hrpc-quichr-00)", October 2018,
              <https://tools.ietf.org/html/
              draft-martini-hrpc-quichr-00>.

   [TRAMMEL]  Trammel, B., Boucadair, M., Even, R., Fioccola, G.,
              Fossati, T., Ihlar, M., Morton, A., and E. Stephan,
              "Adding Explicit Passive Measurability of Two-Way Latency
              to the QUIC Transport Protocol (draft-trammell-quic-spin-
              03)", May 2018, <https://www.ietf.org/archive/id/
              draft-trammell-quic-spin-03.txt>.

Authors' Addresses

   Amelia Andersdotter
   ARTICLE 19
   Free Word Centre, 60 Farringdon Road
   London EC1R 3GA
   United Kingdom

   Email: amelia@article19.org


   Shivan Sahib
   Salesforce

   Email: shivankaulsahib@gmail.com













Andersdotter & Sahib       Expires May 1, 2020                 [Page 11]
